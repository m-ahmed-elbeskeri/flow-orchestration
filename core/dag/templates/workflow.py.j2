# Auto-generated workflow: {{ workflow.name }}
# Version: {{ workflow.version }} - Generated {{ generated_at }}

import asyncio
from core.agent import Agent, Context

class {{ workflow.name|title|replace('_','') }}Workflow:
    def __init__(self):
        self.agent = Agent("{{ workflow.name }}")
        self._setup_states()

    def _setup_states(self):
{% for state_name in workflow.states.keys() %}
        self.agent.add_state(name="{{ state_name }}", func=self.{{ state_name }})
{% endfor %}

{% for state_name, state in workflow.states.items() %}
    async def {{ state_name }}(self, context: Context):
{% if state.config.get('message') %}
        print({{ state.config.message|tojson }})
{% endif %}
{% if state.transitions %}
        return "{{ state.transitions[0].target }}"
{% else %}
        pass
{% endif %}

{% endfor %}
    async def run(self):
        await self.agent.run()

async def main():
    workflow = {{ workflow.name|title|replace('_','') }}Workflow()
    await workflow.run()

if __name__ == "__main__":
    asyncio.run(main())