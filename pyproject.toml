[tool.poetry]
name = "workflow-orchestrator"
version = "0.1.0"
description = "AI-native workflow orchestration system"
authors = ["Your Name <you@example.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [
    { include = "core" },
    { include = "plugins" },
    { include = "worker" },
    { include = "cli" },
]

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "^3.4.3"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
ariadne = "^0.20.0"
pydantic = "^2.4.0"
pydantic-settings = "^2.0.0"
sqlalchemy = "^2.0.0"
alembic = "^1.12.0"
asyncpg = "^0.28.0"
aiosqlite = "^0.19.0"
redis = "^5.0.0"
click = "^8.1.0"
httpx = "^0.25.0"
prometheus-client = "^0.18.0"
opentelemetry-api = "^1.20.0"
opentelemetry-sdk = "^1.20.0"
opentelemetry-exporter-otlp = "^1.20.0"
structlog = "^23.2.0"
pyyaml = "^6.0"
jinja2 = "^3.1.0"
croniter = "^2.0.0"
tenacity = "^8.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
ruff = "^0.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"

[tool.poetry.group.enterprise]
optional = true

[tool.poetry.group.enterprise.dependencies]
boto3 = "^1.28.0"
azure-cosmos = "^4.5.0"
google-cloud-storage = "^2.10.0"
authlib = "^1.2.0"
python-jose = "^3.3.0"
stripe = "^7.0.0"
datadog = "^0.47.0"
newrelic = "^9.1.0"
tensorflow = "^2.14.0"
torch = "^2.1.0"

[tool.poetry.scripts]
workflow = "cli.main:cli"
workflow-worker = "worker.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
no_implicit_optional = true